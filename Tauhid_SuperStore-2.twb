<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0415.1018                               -->
<workbook original-version='18.1' source-build='2025.1.1 (20251.25.0415.1018)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders+ (Sample - Superstore)' inline='true' name='federated.1hgc30q0you2311akr1ro1su7x02' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.0pgn6ie1cobuzb1aztq5g03r31wl'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='D:/Tauheed/Tableau/Tableau/Tutorial-2/Sample - Superstore.xls' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation all='true' name='Orders+' type='union'>
          <columns header='yes'>
            <column datatype='integer' name='Row ID' />
            <column datatype='string' name='Order ID' />
            <column datatype='date' name='Order Date' />
            <column datatype='date' name='Ship Date' />
            <column datatype='string' name='Ship Mode' />
            <column datatype='string' name='Customer ID' />
            <column datatype='string' name='Customer Name' />
            <column datatype='string' name='Segment' />
            <column datatype='string' name='Country/Region' />
            <column datatype='string' name='City' />
            <column datatype='string' name='State' />
            <column datatype='integer' name='Postal Code' />
            <column datatype='string' name='Region' />
            <column datatype='string' name='Product ID' />
            <column datatype='string' name='Category' />
            <column datatype='string' name='Sub-Category' />
            <column datatype='string' name='Product Name' />
            <column datatype='real' name='Sales' />
            <column datatype='integer' name='Quantity' />
            <column datatype='real' name='Discount' />
            <column datatype='real' name='Profit' />
            <column datatype='string' name='Person' />
            <column datatype='string' name='Returned' />
            <column datatype='string' name='Sheet' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='excel-direct.0pgn6ie1cobuzb1aztq5g03r31wl' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:U9995:no:A1:U9995:1' header='yes' lost='0' outcome='1' processed='79941'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='Country/Region' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='integer' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Product ID' ordinal='13' />
              <column datatype='string' name='Category' ordinal='14' />
              <column datatype='string' name='Sub-Category' ordinal='15' />
              <column datatype='string' name='Product Name' ordinal='16' />
              <column datatype='real' name='Sales' ordinal='17' />
              <column datatype='integer' name='Quantity' ordinal='18' />
              <column datatype='real' name='Discount' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
            </columns>
          </relation>
          <relation connection='excel-direct.0pgn6ie1cobuzb1aztq5g03r31wl' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B5:no:A1:B5:0' outcome='6'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.0pgn6ie1cobuzb1aztq5g03r31wl' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B801:no:A1:B801:0' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Orders_3F8CED7B409E45448347FE135E40D801]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[Orders_3F8CED7B409E45448347FE135E40D801]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Orders_3F8CED7B409E45448347FE135E40D801]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Orders_3F8CED7B409E45448347FE135E40D801]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[Orders_3F8CED7B409E45448347FE135E40D801]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[Orders_3F8CED7B409E45448347FE135E40D801]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[Orders_3F8CED7B409E45448347FE135E40D801]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[Orders_3F8CED7B409E45448347FE135E40D801]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[Orders_3F8CED7B409E45448347FE135E40D801]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[Orders_3F8CED7B409E45448347FE135E40D801]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[Orders_3F8CED7B409E45448347FE135E40D801]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Orders_3F8CED7B409E45448347FE135E40D801]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[Orders_3F8CED7B409E45448347FE135E40D801]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[Orders_3F8CED7B409E45448347FE135E40D801]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[Orders_3F8CED7B409E45448347FE135E40D801]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[Orders_3F8CED7B409E45448347FE135E40D801]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[Orders_3F8CED7B409E45448347FE135E40D801]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Orders_3F8CED7B409E45448347FE135E40D801]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Orders_3F8CED7B409E45448347FE135E40D801]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Orders_3F8CED7B409E45448347FE135E40D801]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Orders_3F8CED7B409E45448347FE135E40D801]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[Orders_3F8CED7B409E45448347FE135E40D801]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[Orders_3F8CED7B409E45448347FE135E40D801]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sheet</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sheet]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Sheet</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[Orders_3F8CED7B409E45448347FE135E40D801]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[Orders+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[Orders_3F8CED7B409E45448347FE135E40D801]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_3F8CED7B409E45448347FE135E40D801]' role='measure' type='quantitative' />
      <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Inclusions (Country/Region,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country/Region:nk]' />
          <groupfilter function='level-members' level='[none:State:nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Orders' id='Orders_3F8CED7B409E45448347FE135E40D801'>
            <properties context=''>
              <relation all='true' name='Orders+' type='union'>
                <columns header='yes'>
                  <column datatype='integer' name='Row ID' />
                  <column datatype='string' name='Order ID' />
                  <column datatype='date' name='Order Date' />
                  <column datatype='date' name='Ship Date' />
                  <column datatype='string' name='Ship Mode' />
                  <column datatype='string' name='Customer ID' />
                  <column datatype='string' name='Customer Name' />
                  <column datatype='string' name='Segment' />
                  <column datatype='string' name='Country/Region' />
                  <column datatype='string' name='City' />
                  <column datatype='string' name='State' />
                  <column datatype='integer' name='Postal Code' />
                  <column datatype='string' name='Region' />
                  <column datatype='string' name='Product ID' />
                  <column datatype='string' name='Category' />
                  <column datatype='string' name='Sub-Category' />
                  <column datatype='string' name='Product Name' />
                  <column datatype='real' name='Sales' />
                  <column datatype='integer' name='Quantity' />
                  <column datatype='real' name='Discount' />
                  <column datatype='real' name='Profit' />
                  <column datatype='string' name='Person' />
                  <column datatype='string' name='Returned' />
                  <column datatype='string' name='Sheet' />
                  <column datatype='string' name='Table Name' />
                </columns>
                <relation connection='excel-direct.0pgn6ie1cobuzb1aztq5g03r31wl' name='Orders' table='[Orders$]' type='table'>
                  <columns gridOrigin='A1:U9995:no:A1:U9995:1' header='yes' lost='0' outcome='1' processed='79941'>
                    <column datatype='integer' name='Row ID' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                    <column datatype='date' name='Order Date' ordinal='2' />
                    <column datatype='date' name='Ship Date' ordinal='3' />
                    <column datatype='string' name='Ship Mode' ordinal='4' />
                    <column datatype='string' name='Customer ID' ordinal='5' />
                    <column datatype='string' name='Customer Name' ordinal='6' />
                    <column datatype='string' name='Segment' ordinal='7' />
                    <column datatype='string' name='Country/Region' ordinal='8' />
                    <column datatype='string' name='City' ordinal='9' />
                    <column datatype='string' name='State' ordinal='10' />
                    <column datatype='integer' name='Postal Code' ordinal='11' />
                    <column datatype='string' name='Region' ordinal='12' />
                    <column datatype='string' name='Product ID' ordinal='13' />
                    <column datatype='string' name='Category' ordinal='14' />
                    <column datatype='string' name='Sub-Category' ordinal='15' />
                    <column datatype='string' name='Product Name' ordinal='16' />
                    <column datatype='real' name='Sales' ordinal='17' />
                    <column datatype='integer' name='Quantity' ordinal='18' />
                    <column datatype='real' name='Discount' ordinal='19' />
                    <column datatype='real' name='Profit' ordinal='20' />
                  </columns>
                </relation>
                <relation connection='excel-direct.0pgn6ie1cobuzb1aztq5g03r31wl' name='People' table='[People$]' type='table'>
                  <columns gridOrigin='A1:B5:no:A1:B5:0' outcome='6'>
                    <column datatype='string' name='Person' ordinal='0' />
                    <column datatype='string' name='Region' ordinal='1' />
                  </columns>
                </relation>
                <relation connection='excel-direct.0pgn6ie1cobuzb1aztq5g03r31wl' name='Returns' table='[Returns$]' type='table'>
                  <columns gridOrigin='A1:B801:no:A1:B801:0' outcome='6'>
                    <column datatype='string' name='Returned' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Negative Profit Bar Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.1hgc30q0you2311akr1ro1su7x02' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1hgc30q0you2311akr1ro1su7x02'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hgc30q0you2311akr1ro1su7x02].[Inclusions (Country/Region,State)]' context='true'>
            <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;United States&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hgc30q0you2311akr1ro1su7x02].[none:City:nk]'>
            <groupfilter count='5' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hgc30q0you2311akr1ro1su7x02].[none:Postal Code:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Postal Code:ok]' member='1040' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='1453' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='1752' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='1810' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='1841' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='1852' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='1915' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='2038' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='2138' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='2148' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='2149' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='2151' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='2169' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='2740' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='2886' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='2895' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='2908' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='2920' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='3060' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='3301' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='3820' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='4240' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='4401' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='6010' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='6040' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='6360' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='6450' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='6457' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='6460' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='6484' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='6708' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='6810' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='6824' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='7002' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='7011' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='7017' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='7036' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='7050' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='7055' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='7060' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='7090' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='7109' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='7501' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='7601' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='7960' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='8302' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='8360' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='8401' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='8701' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='8861' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='8901' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='10009' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='10011' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='10024' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='10035' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='10550' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='10701' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='10801' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='11520' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='11550' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='11561' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='11572' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='11757' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='12180' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='13021' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='13440' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='13501' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='13601' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='14215' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='14304' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='14609' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='14701' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='16602' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='17403' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='17602' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='18018' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='18103' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='19013' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='19120' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='19134' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='19140' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='19143' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='19601' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='19711' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='19805' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='19901' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='20016' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='20707' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='20735' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='20852' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='20877' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='21044' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='21215' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='21740' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='22153' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='22204' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='22304' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='22801' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='22901' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='22980' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='23223' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='23320' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='23434' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='23464' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='23602' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='23666' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='24153' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='26003' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='27217' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='27360' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='27405' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='27511' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='27514' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='27534' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='27604' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='27707' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='27834' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='27893' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='28027' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='28052' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='28110' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='28205' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='28314' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='28403' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='28601' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='28806' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='29203' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='29406' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='29464' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='29483' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='29501' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='29730' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='30062' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='30076' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='30080' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='30188' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='30318' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='30328' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='30344' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='30605' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='31088' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='31204' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='31907' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='32114' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='32127' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='32137' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='32174' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='32216' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='32303' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='32503' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='32712' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='32725' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='32771' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='32839' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='32935' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33012' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33021' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33023' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33024' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33030' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33063' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33065' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33068' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33134' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33142' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33161' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33178' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33180' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33311' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33317' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33319' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33407' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33433' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33437' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33445' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33458' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33614' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33710' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33801' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='34741' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='34952' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='35244' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='35401' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='35601' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='35630' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='35810' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='36116' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='36608' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='36830' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='37042' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='37064' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='37075' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='37087' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='37130' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='37167' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='37211' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='37421' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='37604' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='37620' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='37918' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='38109' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='38134' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='38301' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='38401' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='38671' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='39212' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='39401' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='39503' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='40214' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='40324' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='40475' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='41042' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='42071' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='42104' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='42301' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='42420' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='43017' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='43055' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='43123' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='43130' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='43229' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='43302' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='43402' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='43615' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='44035' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='44052' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='44060' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='44105' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='44107' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='44134' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='44221' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='44240' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='44256' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='44312' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='45011' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='45014' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='45040' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='45231' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='45373' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='45503' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='46060' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='46142' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='46203' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='46226' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='46350' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='46368' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='46514' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='46544' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='46614' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='47150' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='47201' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='47362' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='47374' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='47401' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='47905' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48066' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48073' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48104' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48126' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48127' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48146' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48180' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48183' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48185' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48187' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48205' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48227' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48234' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48237' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48307' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48310' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48601' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48640' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48858' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48911' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='49201' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='49423' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='49505' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='50315' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='50322' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='50701' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='52001' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='52240' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='52302' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='52402' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='52601' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='53081' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='53132' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='53142' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='53186' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='53209' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='53214' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='53711' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='54302' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='54401' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='54601' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='54703' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='54880' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='54915' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='55016' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='55044' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='55106' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='55113' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='55122' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='55124' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='55125' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='55369' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='55407' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='55433' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='55901' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='56301' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='56560' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='57103' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='57401' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='57701' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='58103' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='59102' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='59405' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='59601' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='59715' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='59801' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60004' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60016' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60025' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60035' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60067' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60068' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60076' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60089' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60090' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60098' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60126' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60174' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60188' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60201' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60302' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60423' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60440' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60441' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60462' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60477' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60505' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60540' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60543' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60610' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60623' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60653' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='61032' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='61107' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='61604' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='61701' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='61761' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='61821' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='61832' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='62301' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='62521' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='63116' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='63122' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='63301' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='63376' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='64055' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='64118' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='65109' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='65203' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='65807' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='66062' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='66212' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='66502' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='67212' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='67846' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='68025' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='68104' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='68701' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='68801' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='70065' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='70506' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='70601' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='71111' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='71203' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='71603' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='71854' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='71901' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='72032' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='72209' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='72401' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='72701' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='72756' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='72762' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='73034' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='73071' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='73120' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='73505' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='74012' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='74133' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='74403' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75002' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75007' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75019' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75023' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75034' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75043' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75051' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75056' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75061' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75080' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75081' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75104' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75150' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75217' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75220' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75701' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='76017' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='76021' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='76051' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='76063' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='76106' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='76117' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='76248' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='76706' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='76903' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77036' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77041' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77070' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77095' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77301' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77340' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77489' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77506' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77520' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77536' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77571' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77573' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77581' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77590' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77642' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77705' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77803' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77840' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='78041' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='78207' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='78415' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='78501' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='78521' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='78539' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='78550' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='78577' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='78664' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='78666' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='78745' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='79109' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='79424' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='79605' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='79762' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='79907' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80004' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80013' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80020' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80022' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80027' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80112' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80122' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80134' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80219' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80229' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80501' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80525' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80538' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80634' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80906' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='81001' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='82001' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='83201' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='83301' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='83501' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='83605' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='83642' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='83704' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='84020' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='84041' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='84043' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='84057' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='84062' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='84084' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='84106' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='84107' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='84321' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='84604' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='85023' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='85204' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='85224' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='85234' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='85254' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='85281' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='85301' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='85323' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='85345' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='85364' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='85635' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='85705' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='86442' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='87105' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='87124' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='87401' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='87505' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='88001' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='88101' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='88220' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='89015' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='89031' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='89115' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='89431' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='89502' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='90004' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='90008' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='90032' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='90036' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='90045' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='90049' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='90278' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='90301' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='90503' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='90604' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='90640' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='90660' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='90712' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='90805' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='91104' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='91360' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='91505' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='91730' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='91761' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='91767' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='91776' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='91911' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='91941' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92020' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92024' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92025' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92037' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92054' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92105' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92236' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92253' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92307' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92345' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92374' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92399' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92404' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92503' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92530' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92553' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92563' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92592' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92627' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92630' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92646' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92672' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92677' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92683' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92691' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92704' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92804' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='93010' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='93030' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='93101' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='93277' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='93309' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='93405' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='93454' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='93534' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='93727' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='93905' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='94061' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='94086' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='94109' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='94110' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='94122' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='94403' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='94509' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='94513' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='94521' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='94526' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='94533' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='94568' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='94591' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='94601' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='95037' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='95051' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='95123' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='95207' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='95240' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='95336' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='95351' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='95610' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='95616' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='95661' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='95687' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='95695' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='95823' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='95928' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='96003' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='97030' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='97123' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='97206' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='97224' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='97301' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='97405' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='97477' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='97504' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='97756' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98002' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98006' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98026' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98031' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98042' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98052' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98059' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98103' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98105' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98115' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98198' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98208' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98226' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98270' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98502' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98632' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98661' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='99207' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='99301' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hgc30q0you2311akr1ro1su7x02].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;South&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hgc30q0you2311akr1ro1su7x02].[yr:Order Date:ok]'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hgc30q0you2311akr1ro1su7x02].[Inclusions (Country/Region,State)]</column>
            <column>[federated.1hgc30q0you2311akr1ro1su7x02].[none:Region:nk]</column>
            <column>[federated.1hgc30q0you2311akr1ro1su7x02].[none:City:nk]</column>
            <column>[federated.1hgc30q0you2311akr1ro1su7x02].[none:Postal Code:ok]</column>
            <column>[federated.1hgc30q0you2311akr1ro1su7x02].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hgc30q0you2311akr1ro1su7x02].[sum:Profit:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1hgc30q0you2311akr1ro1su7x02].[none:Country/Region:nk] / ([federated.1hgc30q0you2311akr1ro1su7x02].[none:State:nk] / ([federated.1hgc30q0you2311akr1ro1su7x02].[none:City:nk] / [federated.1hgc30q0you2311akr1ro1su7x02].[none:Sub-Category:nk])))</rows>
        <cols>[federated.1hgc30q0you2311akr1ro1su7x02].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{66EA0D71-1DBE-4023-A341-4E4AECCC9E17}' />
    </worksheet>
    <worksheet name='Profit Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.1hgc30q0you2311akr1ro1su7x02' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1hgc30q0you2311akr1ro1su7x02'>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hgc30q0you2311akr1ro1su7x02].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;South&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hgc30q0you2311akr1ro1su7x02].[none:Sub-Category:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Accessories&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Appliances&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Art&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Binders&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Bookcases&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Chairs&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Copiers&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Envelopes&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Fasteners&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Furnishings&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Labels&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Machines&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Paper&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Phones&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Storage&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Supplies&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Tables&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hgc30q0you2311akr1ro1su7x02].[yr:Order Date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2018' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2019' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2020' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2021' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hgc30q0you2311akr1ro1su7x02].[none:Region:nk]</column>
            <column>[federated.1hgc30q0you2311akr1ro1su7x02].[none:Sub-Category:nk]</column>
            <column>[federated.1hgc30q0you2311akr1ro1su7x02].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1hgc30q0you2311akr1ro1su7x02].[Longitude (generated)]' field-type='quantitative' max='-4416246.140501542' min='-12126578.020233935' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1hgc30q0you2311akr1ro1su7x02].[Latitude (generated)]' field-type='quantitative' max='4840901.8831139114' min='2262883.3315440123' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hgc30q0you2311akr1ro1su7x02].[sum:Profit:qk]' />
              <text column='[federated.1hgc30q0you2311akr1ro1su7x02].[sum:Profit:qk]' />
              <lod column='[federated.1hgc30q0you2311akr1ro1su7x02].[none:Country/Region:nk]' />
              <lod column='[federated.1hgc30q0you2311akr1ro1su7x02].[none:State:nk]' />
              <geometry column='[federated.1hgc30q0you2311akr1ro1su7x02].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hgc30q0you2311akr1ro1su7x02].[Latitude (generated)]</rows>
        <cols>[federated.1hgc30q0you2311akr1ro1su7x02].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{BC057C64-161C-46D6-AA26-553A5A157B11}' />
    </worksheet>
    <worksheet name='Sales by Product/Region'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.1hgc30q0you2311akr1ro1su7x02' />
          </datasources>
          <datasource-dependencies datasource='federated.1hgc30q0you2311akr1ro1su7x02'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hgc30q0you2311akr1ro1su7x02].[none:Sub-Category:nk]'>
            <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Machines&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hgc30q0you2311akr1ro1su7x02].[yr:Order Date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2018' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2019' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2020' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2021' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hgc30q0you2311akr1ro1su7x02].[yr:Order Date:ok]</column>
            <column>[federated.1hgc30q0you2311akr1ro1su7x02].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1hgc30q0you2311akr1ro1su7x02].[none:Sub-Category:nk]' value='119' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hgc30q0you2311akr1ro1su7x02].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hgc30q0you2311akr1ro1su7x02].[none:Region:nk] * [federated.1hgc30q0you2311akr1ro1su7x02].[sum:Sales:qk])</rows>
        <cols>([federated.1hgc30q0you2311akr1ro1su7x02].[yr:Order Date:ok] / ([federated.1hgc30q0you2311akr1ro1su7x02].[none:Category:nk] / [federated.1hgc30q0you2311akr1ro1su7x02].[none:Sub-Category:nk]))</cols>
      </table>
      <simple-id uuid='{48E66E5A-21A7-458B-9403-17A9F86F002D}' />
    </worksheet>
    <worksheet name='Sales in the South'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.1hgc30q0you2311akr1ro1su7x02' />
          </datasources>
          <datasource-dependencies datasource='federated.1hgc30q0you2311akr1ro1su7x02'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hgc30q0you2311akr1ro1su7x02].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;South&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hgc30q0you2311akr1ro1su7x02].[none:Sub-Category:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Accessories&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Appliances&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Art&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Binders&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Bookcases&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Chairs&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Copiers&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Envelopes&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Fasteners&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Furnishings&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Labels&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Machines&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Paper&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Phones&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Storage&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Supplies&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Tables&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hgc30q0you2311akr1ro1su7x02].[yr:Order Date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2018' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2019' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2020' />
              <groupfilter function='member' level='[yr:Order Date:ok]' member='2021' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hgc30q0you2311akr1ro1su7x02].[yr:Order Date:ok]</column>
            <column>[federated.1hgc30q0you2311akr1ro1su7x02].[none:Sub-Category:nk]</column>
            <column>[federated.1hgc30q0you2311akr1ro1su7x02].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hgc30q0you2311akr1ro1su7x02].[sum:Profit:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1hgc30q0you2311akr1ro1su7x02].[none:Region:nk] * [federated.1hgc30q0you2311akr1ro1su7x02].[sum:Sales:qk])</rows>
        <cols>([federated.1hgc30q0you2311akr1ro1su7x02].[yr:Order Date:ok] / ([federated.1hgc30q0you2311akr1ro1su7x02].[none:Category:nk] / [federated.1hgc30q0you2311akr1ro1su7x02].[none:Sub-Category:nk]))</cols>
      </table>
      <simple-id uuid='{EA455375-F677-41EC-BA0A-F7C0EDD882B3}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Orders+ (Sample - Superstore)' name='federated.1hgc30q0you2311akr1ro1su7x02' />
      </datasources>
      <datasource-dependencies datasource='federated.1hgc30q0you2311akr1ro1su7x02'>
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
        <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='50000'>
            <zone h='49000' id='3' param='vert' type-v2='layout-flow' w='82400' x='800' y='50000'>
              <zone h='49000' id='5' name='Sales in the South' w='82400' x='800' y='50000'>
                <layout-cache minheight='318' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='49000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='50000'>
              <zone h='19437' id='9' name='Sales in the South' param='[federated.1hgc30q0you2311akr1ro1su7x02].[yr:Order Date:ok]' type-v2='filter' w='16000' x='83200' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10125' id='10' name='Sales in the South' pane-specification-id='0' param='[federated.1hgc30q0you2311akr1ro1su7x02].[sum:Profit:qk]' type-v2='color' w='16000' x='83200' y='69437'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='19438' id='14' name='Profit Map' param='[federated.1hgc30q0you2311akr1ro1su7x02].[none:Sub-Category:nk]' type-v2='filter' w='16000' x='83200' y='79562'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='49000' id='11' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='49000' id='12' name='Profit Map' w='98400' x='800' y='1000'>
              <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='15' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='19438' id='14' mode='checkdropdown' name='Profit Map' param='[federated.1hgc30q0you2311akr1ro1su7x02].[none:Sub-Category:nk]' type-v2='filter' w='16000' x='83200' y='79562'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='12' is-fixed='true' name='Profit Map' w='98400' x='800' y='1000'>
                  <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='19437' id='9' mode='checkdropdown' name='Sales in the South' param='[federated.1hgc30q0you2311akr1ro1su7x02].[yr:Order Date:ok]' type-v2='filter' w='16000' x='83200' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='Sales in the South' w='82400' x='800' y='50000'>
                  <layout-cache minheight='318' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10125' id='10' name='Sales in the South' pane-specification-id='0' param='[federated.1hgc30q0you2311akr1ro1su7x02].[sum:Profit:qk]' type-v2='color' w='16000' x='83200' y='69437'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{AD232108-5B3B-471A-8526-4B31F70E90AE}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Sales by Product/Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hgc30q0you2311akr1ro1su7x02].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hgc30q0you2311akr1ro1su7x02].[none:Category:nk]</field>
            <field>[federated.1hgc30q0you2311akr1ro1su7x02].[none:Region:nk]</field>
            <field>[federated.1hgc30q0you2311akr1ro1su7x02].[none:Sub-Category:nk]</field>
            <field>[federated.1hgc30q0you2311akr1ro1su7x02].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D49D74B6-D332-424F-806E-1FA91E7FCE6D}' />
    </window>
    <window class='worksheet' name='Profit Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1hgc30q0you2311akr1ro1su7x02].[yr:Order Date:ok]' type='filter' />
            <card param='[federated.1hgc30q0you2311akr1ro1su7x02].[none:Sub-Category:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1hgc30q0you2311akr1ro1su7x02].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hgc30q0you2311akr1ro1su7x02].[none:Country/Region:nk]</field>
            <field>[federated.1hgc30q0you2311akr1ro1su7x02].[none:Region:nk]</field>
            <field>[federated.1hgc30q0you2311akr1ro1su7x02].[none:State:nk]</field>
            <field>[federated.1hgc30q0you2311akr1ro1su7x02].[none:Sub-Category:nk]</field>
            <field>[federated.1hgc30q0you2311akr1ro1su7x02].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF06F1FD-2AF8-49AA-BF40-1DAB787B7AFE}' />
    </window>
    <window class='worksheet' name='Negative Profit Bar Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1hgc30q0you2311akr1ro1su7x02].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1hgc30q0you2311akr1ro1su7x02].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hgc30q0you2311akr1ro1su7x02].[none:City:nk]</field>
            <field>[federated.1hgc30q0you2311akr1ro1su7x02].[none:Country/Region:nk]</field>
            <field>[federated.1hgc30q0you2311akr1ro1su7x02].[none:Postal Code:ok]</field>
            <field>[federated.1hgc30q0you2311akr1ro1su7x02].[none:Region:nk]</field>
            <field>[federated.1hgc30q0you2311akr1ro1su7x02].[none:State:nk]</field>
            <field>[federated.1hgc30q0you2311akr1ro1su7x02].[none:Sub-Category:nk]</field>
            <field>[federated.1hgc30q0you2311akr1ro1su7x02].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{54FEA1DD-0EE8-42C5-B9F9-7ADB822B8CC6}' />
    </window>
    <window class='worksheet' name='Sales in the South'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1hgc30q0you2311akr1ro1su7x02].[none:Sub-Category:nk]' type='filter' />
            <card param='[federated.1hgc30q0you2311akr1ro1su7x02].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1hgc30q0you2311akr1ro1su7x02].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hgc30q0you2311akr1ro1su7x02].[none:Category:nk]</field>
            <field>[federated.1hgc30q0you2311akr1ro1su7x02].[none:Region:nk]</field>
            <field>[federated.1hgc30q0you2311akr1ro1su7x02].[none:Sub-Category:nk]</field>
            <field>[federated.1hgc30q0you2311akr1ro1su7x02].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A8925813-9372-4C94-A36E-91E6F1C6878F}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Profit Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sales in the South'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{02359F4B-5004-4F2F-82E0-AEF7E2079E96}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      OAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Negative Profit Bar Chart' width='192'>
      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
      r/3/FSQ1qXQInAwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profit Map' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales by Product/Region' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29eXAk6Xmf+WTWfaCqUFWoQgGF++gTfXfPyRlRw6FsURJJWfZK1Eo+FLJX
      sbu2V7sRu7bXYcXGrm2FIyyFlpIlKqglZR4SSVG0xOEcnJMz0+TMAI0G0LjvowpX3XdW5bF/
      oBvd6Mb03YVCI58IBKoys/J78/jld735voKmaRo6OgcUca8N0NHZSx4bARSLxb02QWcf8tgI
      QJKkR7ZvuVzkJ+++w+TCKru1GN9542WKlY///dzYZX74+hssrsa5+eeLU1NIt2mFKuUc/+37
      r21/11SF0cEP+Mng2M7tKnlm5yJ3d0B3gabk+Ov/dr3cQnqTt958k7nI5o7t8huzfHhl8aYf
      ayTWl3jzrbdJ5ss3rmBmahrloVn54Bh+53d+53f22oiHQalUwmq1PvT9aprGN//k9yk7Gxl4
      /bs4206yuTzLzOws9W4Hr7/6Ku99OMATTz/LwLuvEUkr+O0qk3NLzC+tE24K8Fd//lX8HR28
      +u1v4O05TWpxmHd+cplQo58//N3/SFSS6Whp5f3XXyEvOAh6XdvlRycHkN1dtATcALz3/W8w
      uCJht5pp9tp45eVXyKoWspHLfPFP/4qGcBtqJsLbP7lCS1sbicgMP3z7xwgmG6XEMm++f4nm
      1jYWZsZZnptkaTWGy9fI0uQotnofJsPWM3F+4B3MHedpqrcB8KUv/h6B1i4SqRxWOYVsbWBx
      aghRzvHKjwZJJFO0tbdgEAUKyWV+/798g66uVkw2NwujH/DRlXmafDb+/f/zu0gGG23NPl5/
      +WVw+HBb4I3XXmFlPUWwqZGhH7/N+FKclqCbiakZpqbniG1u0NgYYGRkjEAggCA8nOv72NQA
      jwxNIaZa+Nzf+Wm+8LkXGBoZ53t/8efkVSsvf+trWIPtOCxG5gd+yHhM5PI7LzE/P8OXv/bX
      eAOBrX0YbFx46hl+9Zde4MroPOlMltz6NH/7zggBr5+jx49x6c3vkTN7efk7f8l2XaZpDE2s
      cPJw+OoClcnZGL/8K5/jxeeepJTPogB/+c1v4PI1EGxsIewz8fXvvo7XmOQHb17kK3/+V3S0
      Bnn7nff5y1f6CftNfO1bL/HOS99hJl7BUlzlnf5RfnTxg+2bH+DyQopT7Z7t76eP9/LmG29h
      stUxM3SR9Tx8+P5bFCqgiCYqa1d4q3+CyYlxZq5c5vSLn+cTn3iOjpCbbC7P8vA7/HgmTbAh
      wJHD3bz2nW9iDYT5m7/8Fm9+/9vkzD7GPvwRk0Pv88FshuzsB7zTP8ZX/r+vYqtvYHLgfWbn
      phicisJDuvlBF8CdEUTEYo71dIHRK+M0hhppaD/Gp545Tbak0nfsMA6riUw6TSqVpKmtCxGV
      J5/7ND0tge3daJrC0OUxQs1OPhqc42TfERRFxe910dTSTiGbIhGP09PRjXztN2qRInYcxmtX
      XMDt1JiaWyebzTLcfxF/+zE8DjOuej9ul4eAx0IsnqBscBGqN2Fw+OjpaMUggtkV4FBvL+Vi
      Bru3iZ/99Cc5fuETjL/5TZyhXkziVjlKYRPB3oDhhsdsy7Gn+D9++7f48WsvUdZAKhXI5bf6
      XeG2HlpDfkr5LBPjo1jqG5keGaJSKZPcXGJ8Oc/R3nYqqhG/x0W4JUwmkyQeS9Dd2UkiJ3H8
      +DFcdivFfJZguIPO1iDZXIGjZ5/l7JFOnnvmDH/6pa9x+vzZh3n/6wK4E4Ig8IUv/BLf+NIf
      sCS28VMnW+nt6UIAPvOZT/GVP/pDbP42zjz/GTzlKDOROK76IO3N/u19dHc28Hv/4XeR/H08
      fbSLJo/Ch+OrdLU28tzf+Sm+/odf5NRPf458ZILVnITp6u+Wh35My8mnbrSGn//vfp2h1/6C
      L3/rZbp6j3DxjVdo7ujBYm8kYN3klY+i/L0Xz/CTDy5hdTfz1BEvf/Tlr1GSRZ5oUfjDP/sr
      Pv/3Pk9ndy9GQcBgcRHyeTh97tR2KZPDQxw6cXLHjTY7fJHf++Kfcv6Fn+Hkmad4+Rt/gs3f
      Rp07QGzqXS4uyrz47Dk++/lfovf4OZ7qtPCf/tN/Zr1kw1KMsJCG5oY6nn26jz/78tf5mV/8
      ByyNDZAsa7zw4gv8zVe/xOjCBr3nXkBevMh78zIvPn2C7o4WAEI9J3DVuTkU9j7c6/u4zAOk
      Uik8Hs+dN6wSD6NP8sZrr/H8pz+N8QH28d2vfpGR+Tif+sVf44mjrRiNO/c2P/Q+L12K8lv/
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sales in the South' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
